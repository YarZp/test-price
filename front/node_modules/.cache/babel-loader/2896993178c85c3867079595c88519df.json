{"ast":null,"code":"import { defineStore } from \"pinia\";\nimport axios from \"axios\";\nexport const useMainStore = defineStore('main', {\n  state: () => ({\n    planData: {}\n  }),\n  getters: {\n    getCards: state => {\n      return state.planData?.cards;\n    }\n  },\n  actions: {\n    async fetchPlans() {\n      try {\n        const data = await axios.get('https://03d1-91-218-98-244.eu.ngrok.io/price');\n        this.planData = data.data; // this.planData={\n        //     cards:[\n        //         {\n        //             type: \"Lite\",\n        //             description: \"Perfect to get started\",\n        //             price: {\n        //                 month:10,\n        //                 year:120\n        //             },\n        //\n        //         },\n        //         {\n        //             type: \"Pro\",\n        //             description: \"Best for professional\",\n        //             price: {\n        //                 month:19,\n        //                 year:190\n        //             }\n        //         },\n        //         {\n        //             type: \"Ultimate\",\n        //             description: \"Toolset for hard players\",\n        //             price: {\n        //                 month:30,\n        //                 year:300\n        //             }\n        //         },\n        //     ],\n        //     table: [\n        //         {name:'CMS integration', show:'Lite', beta:false, includes:{\n        //             lite:true,\n        //                 pro:true,\n        //                 ultimate:true\n        //             }},\n        //\n        //         {name:'Advanced analytics', show:'Pro', beta:false, includes:{\n        //                 lite:false,\n        //                 pro:true,\n        //                 ultimate:true\n        //             }},\n        //         {name:'Advanced analytics 2', show:'Ultimate', beta:false, includes:{\n        //                 lite:false,\n        //                 pro:false,\n        //                 ultimate:true\n        //             }},\n        //     ]\n        // }\n\n        console.log(this.planData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n});","map":{"version":3,"names":["defineStore","axios","useMainStore","state","planData","getters","getCards","cards","actions","fetchPlans","data","get","console","log","error"],"sources":["/home/legion/project/interview/test-task/src/store/main.js"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport axios from \"axios\"\nexport const useMainStore= defineStore('main',{\n    state: ()=>({\n        planData:{}\n    }),\n    getters: {\n        getCards: state => {\n          return   state.planData?.cards\n        }\n    },\n    actions: {\n        async fetchPlans() {\n            try {\n                 const data = await axios.get('https://03d1-91-218-98-244.eu.ngrok.io/price' )\n                 this.planData = data.data\n                // this.planData={\n                //     cards:[\n                //         {\n                //             type: \"Lite\",\n                //             description: \"Perfect to get started\",\n                //             price: {\n                //                 month:10,\n                //                 year:120\n                //             },\n                //\n                //         },\n                //         {\n                //             type: \"Pro\",\n                //             description: \"Best for professional\",\n                //             price: {\n                //                 month:19,\n                //                 year:190\n                //             }\n                //         },\n                //         {\n                //             type: \"Ultimate\",\n                //             description: \"Toolset for hard players\",\n                //             price: {\n                //                 month:30,\n                //                 year:300\n                //             }\n                //         },\n                //     ],\n                //     table: [\n                //         {name:'CMS integration', show:'Lite', beta:false, includes:{\n                //             lite:true,\n                //                 pro:true,\n                //                 ultimate:true\n                //             }},\n                //\n                //         {name:'Advanced analytics', show:'Pro', beta:false, includes:{\n                //                 lite:false,\n                //                 pro:true,\n                //                 ultimate:true\n                //             }},\n                //         {name:'Advanced analytics 2', show:'Ultimate', beta:false, includes:{\n                //                 lite:false,\n                //                 pro:false,\n                //                 ultimate:true\n                //             }},\n                //     ]\n                // }\n                console.log(this.planData)\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n    },\n\n})\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,YAAY,GAAEF,WAAW,CAAC,MAAD,EAAQ;EAC1CG,KAAK,EAAE,OAAK;IACRC,QAAQ,EAAC;EADD,CAAL,CADmC;EAI1CC,OAAO,EAAE;IACLC,QAAQ,EAAEH,KAAK,IAAI;MACjB,OAASA,KAAK,CAACC,QAAN,EAAgBG,KAAzB;IACD;EAHI,CAJiC;EAS1CC,OAAO,EAAE;IACL,MAAMC,UAAN,GAAmB;MACf,IAAI;QACC,MAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,8CAAV,CAAnB;QACA,KAAKP,QAAL,GAAgBM,IAAI,CAACA,IAArB,CAFD,CAGA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACAE,OAAO,CAACC,GAAR,CAAY,KAAKT,QAAjB;MACH,CAnDD,CAoDA,OAAOU,KAAP,EAAc;QACVF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACH;IACJ;;EAzDI;AATiC,CAAR,CAA/B"},"metadata":{},"sourceType":"module"}