{"ast":null,"code":"import { defineStore } from \"pinia\"; // import axios from \"axios\"\n\nexport const useMainStore = defineStore('main', {\n  state: () => ({\n    planData: {}\n  }),\n  getters: {\n    getCards: state => {\n      return state.planData?.cards;\n    }\n  },\n  actions: {\n    async fetchPlans() {\n      try {\n        // const data = await axios.get('https://jsonplaceholder.typicode.com/users')\n        // this.planData = data.data\n        this.planData = {\n          cards: [{\n            name: \"lite\",\n            description: \"Perfect to get started\",\n            price: {\n              month: 10,\n              year: 120\n            }\n          }, {\n            name: \"pro\",\n            description: \"Best for professional\",\n            price: {\n              month: 19,\n              year: 190\n            }\n          }, {\n            name: \"ultimate\",\n            description: \"Toolset for hard players\",\n            price: {\n              month: 30,\n              year: 300\n            }\n          }],\n          table: [{\n            name: 'CMS integration',\n            show: 'lite',\n            beta: false,\n            types: {\n              lite: true,\n              pro: true,\n              ultimate: true\n            }\n          }, {\n            name: 'Advanced analytics',\n            show: 'pro',\n            beta: false,\n            types: {\n              lite: false,\n              pro: true,\n              ultimate: true\n            }\n          }]\n        };\n        console.log(this.planData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n});","map":{"version":3,"names":["defineStore","useMainStore","state","planData","getters","getCards","cards","actions","fetchPlans","name","description","price","month","year","table","show","beta","types","lite","pro","ultimate","console","log","error"],"sources":["/home/legion/project/interview/test-task/src/store/main.js"],"sourcesContent":["import {defineStore} from \"pinia\";\n// import axios from \"axios\"\nexport const useMainStore= defineStore('main',{\n    state: ()=>({\n        planData:{}\n    }),\n    getters: {\n        getCards: state => {\n          return   state.planData?.cards\n        }\n    },\n    actions: {\n        async fetchPlans() {\n            try {\n                // const data = await axios.get('https://jsonplaceholder.typicode.com/users')\n                // this.planData = data.data\n                this.planData={\n                    cards:[\n                        {\n                            name: \"lite\",\n                            description: \"Perfect to get started\",\n                            price: {\n                                month:10,\n                                year:120\n                            },\n\n                        },\n                        {\n                            name: \"pro\",\n                            description: \"Best for professional\",\n                            price: {\n                                month:19,\n                                year:190\n                            }\n                        },\n                        {\n                            name: \"ultimate\",\n                            description: \"Toolset for hard players\",\n                            price: {\n                                month:30,\n                                year:300\n                            }\n                        },\n                    ],\n                    table: [\n                        {name:'CMS integration', show:'lite', beta:false, types:{\n                            lite:true,\n                                pro:true,\n                                ultimate:true\n                            }},\n\n                        {name:'Advanced analytics', show:'pro', beta:false, types:{\n                                lite:false,\n                                pro:true,\n                                ultimate:true\n                            }},\n                    ]\n                }\n                console.log(this.planData)\n            }\n            catch (error) {\n                console.log(error)\n            }\n        }\n    },\n\n})\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B,C,CACA;;AACA,OAAO,MAAMC,YAAY,GAAED,WAAW,CAAC,MAAD,EAAQ;EAC1CE,KAAK,EAAE,OAAK;IACRC,QAAQ,EAAC;EADD,CAAL,CADmC;EAI1CC,OAAO,EAAE;IACLC,QAAQ,EAAEH,KAAK,IAAI;MACjB,OAASA,KAAK,CAACC,QAAN,EAAgBG,KAAzB;IACD;EAHI,CAJiC;EAS1CC,OAAO,EAAE;IACL,MAAMC,UAAN,GAAmB;MACf,IAAI;QACA;QACA;QACA,KAAKL,QAAL,GAAc;UACVG,KAAK,EAAC,CACF;YACIG,IAAI,EAAE,MADV;YAEIC,WAAW,EAAE,wBAFjB;YAGIC,KAAK,EAAE;cACHC,KAAK,EAAC,EADH;cAEHC,IAAI,EAAC;YAFF;UAHX,CADE,EAUF;YACIJ,IAAI,EAAE,KADV;YAEIC,WAAW,EAAE,uBAFjB;YAGIC,KAAK,EAAE;cACHC,KAAK,EAAC,EADH;cAEHC,IAAI,EAAC;YAFF;UAHX,CAVE,EAkBF;YACIJ,IAAI,EAAE,UADV;YAEIC,WAAW,EAAE,0BAFjB;YAGIC,KAAK,EAAE;cACHC,KAAK,EAAC,EADH;cAEHC,IAAI,EAAC;YAFF;UAHX,CAlBE,CADI;UA4BVC,KAAK,EAAE,CACH;YAACL,IAAI,EAAC,iBAAN;YAAyBM,IAAI,EAAC,MAA9B;YAAsCC,IAAI,EAAC,KAA3C;YAAkDC,KAAK,EAAC;cACpDC,IAAI,EAAC,IAD+C;cAEhDC,GAAG,EAAC,IAF4C;cAGhDC,QAAQ,EAAC;YAHuC;UAAxD,CADG,EAOH;YAACX,IAAI,EAAC,oBAAN;YAA4BM,IAAI,EAAC,KAAjC;YAAwCC,IAAI,EAAC,KAA7C;YAAoDC,KAAK,EAAC;cAClDC,IAAI,EAAC,KAD6C;cAElDC,GAAG,EAAC,IAF8C;cAGlDC,QAAQ,EAAC;YAHyC;UAA1D,CAPG;QA5BG,CAAd;QA0CAC,OAAO,CAACC,GAAR,CAAY,KAAKnB,QAAjB;MACH,CA9CD,CA+CA,OAAOoB,KAAP,EAAc;QACVF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACH;IACJ;;EApDI;AATiC,CAAR,CAA/B"},"metadata":{},"sourceType":"module"}